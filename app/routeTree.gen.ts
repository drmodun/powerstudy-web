/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as QuestionAnswersIndexImport } from './routes/question-answers/index'
import { Route as MathProblemsIndexImport } from './routes/math-problems/index'
import { Route as KnowledgeBasesIndexImport } from './routes/knowledge-bases/index'
import { Route as QuestionAnswersIdImport } from './routes/question-answers/$id'
import { Route as MathProblemsIdImport } from './routes/math-problems/$id'
import { Route as KnowledgeBasesCreateImport } from './routes/knowledge-bases/create'
import { Route as KnowledgeBasesIdImport } from './routes/knowledge-bases/$id'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const QuestionAnswersIndexRoute = QuestionAnswersIndexImport.update({
  id: '/question-answers/',
  path: '/question-answers/',
  getParentRoute: () => rootRoute,
} as any)

const MathProblemsIndexRoute = MathProblemsIndexImport.update({
  id: '/math-problems/',
  path: '/math-problems/',
  getParentRoute: () => rootRoute,
} as any)

const KnowledgeBasesIndexRoute = KnowledgeBasesIndexImport.update({
  id: '/knowledge-bases/',
  path: '/knowledge-bases/',
  getParentRoute: () => rootRoute,
} as any)

const QuestionAnswersIdRoute = QuestionAnswersIdImport.update({
  id: '/question-answers/$id',
  path: '/question-answers/$id',
  getParentRoute: () => rootRoute,
} as any)

const MathProblemsIdRoute = MathProblemsIdImport.update({
  id: '/math-problems/$id',
  path: '/math-problems/$id',
  getParentRoute: () => rootRoute,
} as any)

const KnowledgeBasesCreateRoute = KnowledgeBasesCreateImport.update({
  id: '/knowledge-bases/create',
  path: '/knowledge-bases/create',
  getParentRoute: () => rootRoute,
} as any)

const KnowledgeBasesIdRoute = KnowledgeBasesIdImport.update({
  id: '/knowledge-bases/$id',
  path: '/knowledge-bases/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/knowledge-bases/$id': {
      id: '/knowledge-bases/$id'
      path: '/knowledge-bases/$id'
      fullPath: '/knowledge-bases/$id'
      preLoaderRoute: typeof KnowledgeBasesIdImport
      parentRoute: typeof rootRoute
    }
    '/knowledge-bases/create': {
      id: '/knowledge-bases/create'
      path: '/knowledge-bases/create'
      fullPath: '/knowledge-bases/create'
      preLoaderRoute: typeof KnowledgeBasesCreateImport
      parentRoute: typeof rootRoute
    }
    '/math-problems/$id': {
      id: '/math-problems/$id'
      path: '/math-problems/$id'
      fullPath: '/math-problems/$id'
      preLoaderRoute: typeof MathProblemsIdImport
      parentRoute: typeof rootRoute
    }
    '/question-answers/$id': {
      id: '/question-answers/$id'
      path: '/question-answers/$id'
      fullPath: '/question-answers/$id'
      preLoaderRoute: typeof QuestionAnswersIdImport
      parentRoute: typeof rootRoute
    }
    '/knowledge-bases/': {
      id: '/knowledge-bases/'
      path: '/knowledge-bases'
      fullPath: '/knowledge-bases'
      preLoaderRoute: typeof KnowledgeBasesIndexImport
      parentRoute: typeof rootRoute
    }
    '/math-problems/': {
      id: '/math-problems/'
      path: '/math-problems'
      fullPath: '/math-problems'
      preLoaderRoute: typeof MathProblemsIndexImport
      parentRoute: typeof rootRoute
    }
    '/question-answers/': {
      id: '/question-answers/'
      path: '/question-answers'
      fullPath: '/question-answers'
      preLoaderRoute: typeof QuestionAnswersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/knowledge-bases/$id': typeof KnowledgeBasesIdRoute
  '/knowledge-bases/create': typeof KnowledgeBasesCreateRoute
  '/math-problems/$id': typeof MathProblemsIdRoute
  '/question-answers/$id': typeof QuestionAnswersIdRoute
  '/knowledge-bases': typeof KnowledgeBasesIndexRoute
  '/math-problems': typeof MathProblemsIndexRoute
  '/question-answers': typeof QuestionAnswersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/knowledge-bases/$id': typeof KnowledgeBasesIdRoute
  '/knowledge-bases/create': typeof KnowledgeBasesCreateRoute
  '/math-problems/$id': typeof MathProblemsIdRoute
  '/question-answers/$id': typeof QuestionAnswersIdRoute
  '/knowledge-bases': typeof KnowledgeBasesIndexRoute
  '/math-problems': typeof MathProblemsIndexRoute
  '/question-answers': typeof QuestionAnswersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/knowledge-bases/$id': typeof KnowledgeBasesIdRoute
  '/knowledge-bases/create': typeof KnowledgeBasesCreateRoute
  '/math-problems/$id': typeof MathProblemsIdRoute
  '/question-answers/$id': typeof QuestionAnswersIdRoute
  '/knowledge-bases/': typeof KnowledgeBasesIndexRoute
  '/math-problems/': typeof MathProblemsIndexRoute
  '/question-answers/': typeof QuestionAnswersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/signup'
    | '/knowledge-bases/$id'
    | '/knowledge-bases/create'
    | '/math-problems/$id'
    | '/question-answers/$id'
    | '/knowledge-bases'
    | '/math-problems'
    | '/question-answers'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/signup'
    | '/knowledge-bases/$id'
    | '/knowledge-bases/create'
    | '/math-problems/$id'
    | '/question-answers/$id'
    | '/knowledge-bases'
    | '/math-problems'
    | '/question-answers'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/login'
    | '/signup'
    | '/knowledge-bases/$id'
    | '/knowledge-bases/create'
    | '/math-problems/$id'
    | '/question-answers/$id'
    | '/knowledge-bases/'
    | '/math-problems/'
    | '/question-answers/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  KnowledgeBasesIdRoute: typeof KnowledgeBasesIdRoute
  KnowledgeBasesCreateRoute: typeof KnowledgeBasesCreateRoute
  MathProblemsIdRoute: typeof MathProblemsIdRoute
  QuestionAnswersIdRoute: typeof QuestionAnswersIdRoute
  KnowledgeBasesIndexRoute: typeof KnowledgeBasesIndexRoute
  MathProblemsIndexRoute: typeof MathProblemsIndexRoute
  QuestionAnswersIndexRoute: typeof QuestionAnswersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  KnowledgeBasesIdRoute: KnowledgeBasesIdRoute,
  KnowledgeBasesCreateRoute: KnowledgeBasesCreateRoute,
  MathProblemsIdRoute: MathProblemsIdRoute,
  QuestionAnswersIdRoute: QuestionAnswersIdRoute,
  KnowledgeBasesIndexRoute: KnowledgeBasesIndexRoute,
  MathProblemsIndexRoute: MathProblemsIndexRoute,
  QuestionAnswersIndexRoute: QuestionAnswersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/login",
        "/signup",
        "/knowledge-bases/$id",
        "/knowledge-bases/create",
        "/math-problems/$id",
        "/question-answers/$id",
        "/knowledge-bases/",
        "/math-problems/",
        "/question-answers/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/knowledge-bases/$id": {
      "filePath": "knowledge-bases/$id.tsx"
    },
    "/knowledge-bases/create": {
      "filePath": "knowledge-bases/create.tsx"
    },
    "/math-problems/$id": {
      "filePath": "math-problems/$id.tsx"
    },
    "/question-answers/$id": {
      "filePath": "question-answers/$id.tsx"
    },
    "/knowledge-bases/": {
      "filePath": "knowledge-bases/index.tsx"
    },
    "/math-problems/": {
      "filePath": "math-problems/index.tsx"
    },
    "/question-answers/": {
      "filePath": "question-answers/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
