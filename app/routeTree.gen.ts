/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as KnowledgeBasesIndexImport } from './routes/knowledge-bases/index'
import { Route as KnowledgeBasesCreateImport } from './routes/knowledge-bases/create'
import { Route as KnowledgeBasesIdImport } from './routes/knowledge-bases/$id'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const KnowledgeBasesIndexRoute = KnowledgeBasesIndexImport.update({
  id: '/knowledge-bases/',
  path: '/knowledge-bases/',
  getParentRoute: () => rootRoute,
} as any)

const KnowledgeBasesCreateRoute = KnowledgeBasesCreateImport.update({
  id: '/knowledge-bases/create',
  path: '/knowledge-bases/create',
  getParentRoute: () => rootRoute,
} as any)

const KnowledgeBasesIdRoute = KnowledgeBasesIdImport.update({
  id: '/knowledge-bases/$id',
  path: '/knowledge-bases/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/knowledge-bases/$id': {
      id: '/knowledge-bases/$id'
      path: '/knowledge-bases/$id'
      fullPath: '/knowledge-bases/$id'
      preLoaderRoute: typeof KnowledgeBasesIdImport
      parentRoute: typeof rootRoute
    }
    '/knowledge-bases/create': {
      id: '/knowledge-bases/create'
      path: '/knowledge-bases/create'
      fullPath: '/knowledge-bases/create'
      preLoaderRoute: typeof KnowledgeBasesCreateImport
      parentRoute: typeof rootRoute
    }
    '/knowledge-bases/': {
      id: '/knowledge-bases/'
      path: '/knowledge-bases'
      fullPath: '/knowledge-bases'
      preLoaderRoute: typeof KnowledgeBasesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/knowledge-bases/$id': typeof KnowledgeBasesIdRoute
  '/knowledge-bases/create': typeof KnowledgeBasesCreateRoute
  '/knowledge-bases': typeof KnowledgeBasesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/knowledge-bases/$id': typeof KnowledgeBasesIdRoute
  '/knowledge-bases/create': typeof KnowledgeBasesCreateRoute
  '/knowledge-bases': typeof KnowledgeBasesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/knowledge-bases/$id': typeof KnowledgeBasesIdRoute
  '/knowledge-bases/create': typeof KnowledgeBasesCreateRoute
  '/knowledge-bases/': typeof KnowledgeBasesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/knowledge-bases/$id'
    | '/knowledge-bases/create'
    | '/knowledge-bases'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/knowledge-bases/$id'
    | '/knowledge-bases/create'
    | '/knowledge-bases'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/signup'
    | '/knowledge-bases/$id'
    | '/knowledge-bases/create'
    | '/knowledge-bases/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  KnowledgeBasesIdRoute: typeof KnowledgeBasesIdRoute
  KnowledgeBasesCreateRoute: typeof KnowledgeBasesCreateRoute
  KnowledgeBasesIndexRoute: typeof KnowledgeBasesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  KnowledgeBasesIdRoute: KnowledgeBasesIdRoute,
  KnowledgeBasesCreateRoute: KnowledgeBasesCreateRoute,
  KnowledgeBasesIndexRoute: KnowledgeBasesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/signup",
        "/knowledge-bases/$id",
        "/knowledge-bases/create",
        "/knowledge-bases/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/knowledge-bases/$id": {
      "filePath": "knowledge-bases/$id.tsx"
    },
    "/knowledge-bases/create": {
      "filePath": "knowledge-bases/create.tsx"
    },
    "/knowledge-bases/": {
      "filePath": "knowledge-bases/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
